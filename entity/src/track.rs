//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]
#[sea_orm(table_name = "track")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub playlist: Uuid,
    pub name: String,
    pub link: String,
    pub removed: bool,
    pub author: i32,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::author::Entity",
        from = "Column::Author",
        to = "super::author::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Author,
    #[sea_orm(
        belongs_to = "super::playlist::Entity",
        from = "Column::Playlist",
        to = "super::playlist::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Playlist,
}

impl Related<super::author::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Author.def()
    }
}

impl Related<super::playlist::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Playlist.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
